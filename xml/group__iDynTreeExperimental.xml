<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__iDynTreeExperimental" kind="group">
    <compoundname>iDynTreeExperimental</compoundname>
    <title>Experimental classes, for which the interface is currently under active development and is not stable.</title>
    <innerclass refid="classiDynTree_1_1InverseKinematics" prot="public">iDynTree::InverseKinematics</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1Constraint" prot="public">iDynTree::optimalcontrol::Constraint</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1ConstraintsGroup" prot="public">iDynTree::optimalcontrol::ConstraintsGroup</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1ControlledDynamicalSystem" prot="public">iDynTree::optimalcontrol::ControlledDynamicalSystem</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1Controller" prot="public">iDynTree::optimalcontrol::Controller</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1Cost" prot="public">iDynTree::optimalcontrol::Cost</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1DynamicalSystem" prot="public">iDynTree::optimalcontrol::DynamicalSystem</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1integrators_1_1SolutionElement" prot="public">iDynTree::optimalcontrol::integrators::SolutionElement</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1integrators_1_1IntegratorInfo" prot="public">iDynTree::optimalcontrol::integrators::IntegratorInfo</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1integrators_1_1Integrator" prot="public">iDynTree::optimalcontrol::integrators::Integrator</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1integrators_1_1FixedStepIntegrator" prot="public">iDynTree::optimalcontrol::integrators::FixedStepIntegrator</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1integrators_1_1ForwardEuler" prot="public">iDynTree::optimalcontrol::integrators::ForwardEuler</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1integrators_1_1ImplicitTrapezoidal" prot="public">iDynTree::optimalcontrol::integrators::ImplicitTrapezoidal</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1integrators_1_1RK4" prot="public">iDynTree::optimalcontrol::integrators::RK4</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1L2NormCost" prot="public">iDynTree::optimalcontrol::L2NormCost</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1LinearConstraint" prot="public">iDynTree::optimalcontrol::LinearConstraint</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1LinearCost" prot="public">iDynTree::optimalcontrol::LinearCost</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1LinearMPC" prot="public">iDynTree::optimalcontrol::LinearMPC</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1LinearSystem" prot="public">iDynTree::optimalcontrol::LinearSystem</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1MPC" prot="public">iDynTree::optimalcontrol::MPC</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1MultiBodySystem" prot="public">iDynTree::optimalcontrol::MultiBodySystem</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1MultipleShootingSolver" prot="public">iDynTree::optimalcontrol::MultipleShootingSolver</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1OptimalControlProblem" prot="public">iDynTree::optimalcontrol::OptimalControlProblem</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1OptimalControlSolver" prot="public">iDynTree::optimalcontrol::OptimalControlSolver</innerclass>
    <innerclass refid="classiDynTree_1_1optimization_1_1OptimizationProblemInfoData" prot="public">iDynTree::optimization::OptimizationProblemInfoData</innerclass>
    <innerclass refid="classiDynTree_1_1optimization_1_1Optimizer" prot="public">iDynTree::optimization::Optimizer</innerclass>
    <innerclass refid="classiDynTree_1_1optimization_1_1AlglibInterface" prot="public">iDynTree::optimization::AlglibInterface</innerclass>
    <innerclass refid="classiDynTree_1_1optimization_1_1IpoptInterface" prot="public">iDynTree::optimization::IpoptInterface</innerclass>
    <innerclass refid="structiDynTree_1_1optimization_1_1OsqpSettings" prot="public">iDynTree::optimization::OsqpSettings</innerclass>
    <innerclass refid="classiDynTree_1_1optimization_1_1WorhpInterface" prot="public">iDynTree::optimization::WorhpInterface</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1QuadraticCost" prot="public">iDynTree::optimalcontrol::QuadraticCost</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost" prot="public">iDynTree::optimalcontrol::QuadraticLikeCost</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1SystemLineariser" prot="public">iDynTree::optimalcontrol::SystemLineariser</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1TimeRange" prot="public">iDynTree::optimalcontrol::TimeRange</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1TimeVaryingObject" prot="public">iDynTree::optimalcontrol::TimeVaryingObject</innerclass>
    <innerclass refid="classiDynTree_1_1optimalcontrol_1_1TimeInvariantObject" prot="public">iDynTree::optimalcontrol::TimeInvariantObject</innerclass>
    <innerclass refid="structiDynTree_1_1BerdyOptions" prot="public">iDynTree::BerdyOptions</innerclass>
    <innerclass refid="structiDynTree_1_1BerdySensor" prot="public">iDynTree::BerdySensor</innerclass>
    <innerclass refid="classiDynTree_1_1BerdyHelper" prot="public">iDynTree::BerdyHelper</innerclass>
    <innerclass refid="classiDynTree_1_1BerdySparseMAPSolver" prot="public">iDynTree::BerdySparseMAPSolver</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__iDynTreeExperimental_1ga62aff3167b9df327b4b1db6affadd21f" prot="public" static="no" strong="no">
        <type></type>
        <name>BerdyVariants</name>
        <enumvalue id="group__iDynTreeExperimental_1gga62aff3167b9df327b4b1db6affadd21faf59c4a22cd72d6e001dbba40910e9c32" prot="public">
          <name>ORIGINAL_BERDY_FIXED_BASE</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Original version of Berdy, as described in: </para>
          </briefdescription>
          <detaileddescription>
<para>Latella, C.; Kuppuswamy, N.; Romano, F.; Traversaro, S.; Nori, F. Whole-Body Human Inverse Dynamics with Distributed Micro-Accelerometers, Gyros and Force Sensing. Sensors 2016, 16, 727. <ulink url="http://www.mdpi.com/1424-8220/16/5/727">http://www.mdpi.com/1424-8220/16/5/727</ulink></para>
<para>The original version of Berdy is assuming that the joint numbering is a regular ordering of links and joints. For this reason the serialization of link/joints quantities follows the one defined in the traversal.</para>
<para>Furthremore, this version assumes that all joints have 1 Degree of freedom, so it does not work for models with fixed joints. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__iDynTreeExperimental_1gga62aff3167b9df327b4b1db6affadd21fa1ca580068ec7f491800abeadf68185e5" prot="public">
          <name>BERDY_FLOATING_BASE</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Modified version of Berdy for accounting for free floating dynamics and removing the NET_INT_AND_EXT_WRENCHES_ON_LINK_WITHOUT_GRAV from the dynamic variables. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__iDynTreeExperimental_1gga62aff3167b9df327b4b1db6affadd21fa02a303d789d6ebc0a5c3829cd72d4b4d" prot="public">
          <name>BERDY_FLOATING_BASE_NON_COLLOCATED_EXT_WRENCHES</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Modified version of floating base Berdy for accounting centroidal dynamics constraints towards estimating the external link wrench independently of the internal joint torque estimates. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration of the Berdy variants implemented in this class. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This class is still in active development, and so API interface can change between iDynTree versions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/BerdyHelper.h" line="37" column="1" bodyfile="iDynTree/BerdyHelper.h" bodystart="38" bodyend="67"/>
      </memberdef>
      <memberdef kind="enum" id="group__iDynTreeExperimental_1ga83d8f828969dabc7dc82904d8de15312" prot="public" static="no" strong="no">
        <type></type>
        <name>BerdyDynamicVariablesTypes</name>
        <enumvalue id="group__iDynTreeExperimental_1gga83d8f828969dabc7dc82904d8de15312a48b4b26b9b1780cc55a5cbc89c6f0d15" prot="public">
          <name>LINK_BODY_PROPER_ACCELERATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><formula id="291">$ a_i $</formula> Note that is is the <bold>spatial</bold> proper acceleration expressed, i.e. the time derivative of the left-trivialized velocity minus the gravity expressed in body frame. <formula id="292">$ f^B_i $</formula> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__iDynTreeExperimental_1gga83d8f828969dabc7dc82904d8de15312a4d8110167e729b4fd3a17147bcd1252e" prot="public">
          <name>NET_INT_AND_EXT_WRENCHES_ON_LINK_WITHOUT_GRAV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><formula id="293">$ f_i $</formula> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__iDynTreeExperimental_1gga83d8f828969dabc7dc82904d8de15312adaecc7fb3d43b48487ae03dfec685fb8" prot="public">
          <name>JOINT_WRENCH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><formula id="294">$ \tau_i $</formula> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__iDynTreeExperimental_1gga83d8f828969dabc7dc82904d8de15312a80199996cf9e8b7d5171d762533f6c0c" prot="public">
          <name>DOF_TORQUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><formula id="295">$ f^x_i $</formula> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__iDynTreeExperimental_1gga83d8f828969dabc7dc82904d8de15312aa13efb04f5c05ca865f2aee0fd03fe68" prot="public">
          <name>NET_EXT_WRENCH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><formula id="296">$ \ddot{q}_i $</formula> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__iDynTreeExperimental_1gga83d8f828969dabc7dc82904d8de15312a9a69ec4d25d83b00175dc3adb8edce00" prot="public">
          <name>DOF_ACCELERATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This is the classical proper acceleration, i.e. the time derivative of the mixed velocity of the body frame minus the gravity expressed in body frame. In Traversaro&apos;s PhD thesis this is called sensor proper acceleration. This is the necessary for avoiding dependencies on the linear velocity of the base in the floating variant of Berdy. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__iDynTreeExperimental_1gga83d8f828969dabc7dc82904d8de15312ac2cfd7190c466bb19a532054700478dc" prot="public">
          <name>LINK_BODY_PROPER_CLASSICAL_ACCELERATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration describing the dynamic variables types (link acceleration, net wrenches, joint wrenches, joint torques, joint acceleration) used in Berdy. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This class is still in active development, and so API interface can change between iDynTree versions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/BerdyHelper.h" line="76" column="1" bodyfile="iDynTree/BerdyHelper.h" bodystart="77" bodyend="101"/>
      </memberdef>
      <memberdef kind="enum" id="group__iDynTreeExperimental_1gab629c8d25391838124595ba8961654e4" prot="public" static="no" strong="no">
        <type></type>
        <name>BerdySensorTypes</name>
        <enumvalue id="group__iDynTreeExperimental_1ggab629c8d25391838124595ba8961654e4aeb713f0bede28acb44bffd71c4c8b7c5" prot="public">
          <name>SIX_AXIS_FORCE_TORQUE_SENSOR</name>
          <initializer>= SIX_AXIS_FORCE_TORQUE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__iDynTreeExperimental_1ggab629c8d25391838124595ba8961654e4a7735d104e1d0a81cd5cf6b4d4c6e280c" prot="public">
          <name>ACCELEROMETER_SENSOR</name>
          <initializer>= ACCELEROMETER</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__iDynTreeExperimental_1ggab629c8d25391838124595ba8961654e4a0057121dd88c26066f6ea316f78f7e97" prot="public">
          <name>GYROSCOPE_SENSOR</name>
          <initializer>= GYROSCOPE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__iDynTreeExperimental_1ggab629c8d25391838124595ba8961654e4a959f2e93bc56ff32d8dc98a75bdaa0a8" prot="public">
          <name>THREE_AXIS_ANGULAR_ACCELEROMETER_SENSOR</name>
          <initializer>= THREE_AXIS_ANGULAR_ACCELEROMETER</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__iDynTreeExperimental_1ggab629c8d25391838124595ba8961654e4a5bcadad8e7702de8f0dbcdbd5108d893" prot="public">
          <name>THREE_AXIS_FORCE_TORQUE_CONTACT_SENSOR</name>
          <initializer>= THREE_AXIS_FORCE_TORQUE_CONTACT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__iDynTreeExperimental_1ggab629c8d25391838124595ba8961654e4a3b05b1fa0daf40ead3bb45631fc1b425" prot="public">
          <name>DOF_ACCELERATION_SENSOR</name>
          <initializer>= 1000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__iDynTreeExperimental_1ggab629c8d25391838124595ba8961654e4afe52ea6ba4b27e76e1fd986700941151" prot="public">
          <name>DOF_TORQUE_SENSOR</name>
          <initializer>= 1001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__iDynTreeExperimental_1ggab629c8d25391838124595ba8961654e4aa295b9c16be05c81c215270381d2b648" prot="public">
          <name>NET_EXT_WRENCH_SENSOR</name>
          <initializer>= 1002</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__iDynTreeExperimental_1ggab629c8d25391838124595ba8961654e4a207d61f7e8d81f6729f6dd080ba8a06c" prot="public">
          <name>JOINT_WRENCH_SENSOR</name>
          <initializer>= 1003</initializer>
          <briefdescription>
<para>Non-physical sensor that measures the wrench trasmitted by a joint. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__iDynTreeExperimental_1ggab629c8d25391838124595ba8961654e4a86f8f9556695317ef66bb0adef6cd978" prot="public">
          <name>RCM_SENSOR</name>
          <initializer>= 1004</initializer>
          <briefdescription>
<para>Non-physical sensor that holds the value of Rate of Change of Momentum (RCM) of the system for centroidal dynamics constraint. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration describing the possible sensor types implemented in Berdy. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that the concept of &quot;sensor&quot; in Berdy estimation is more general that just a physical sensor mounted on the robot: for example it can include the information that a link is fixed to the ground (i.e. its angular velocity, angular and linear acceleration are zero) even if this information is not coming from an actual physical sensors. For this reason we do not use directly the iDynTree::SensorTypes enum, even if we reserve the first 1000 elements o of this enum to be compatibile with the iDynTree::SensorTypes enum. Enum values duplicates between BerdySensorTypes and SensorTypes are append a _SENSOR suffix to avoid problems when wrapping such enum wit SWIG.</para>
<para><simplesect kind="warning"><para>This class is still in active development, and so API interface can change between iDynTree versions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/BerdyHelper.h" line="119" column="1" bodyfile="iDynTree/BerdyHelper.h" bodystart="120" bodyend="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The classes and function contained in this group are in active development and are expected to change between different iDynTree releases without any support for backward compatibility. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
