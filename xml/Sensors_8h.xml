<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="Sensors_8h" kind="file" language="C++">
    <compoundname>Sensors.h</compoundname>
    <includes refid="GeomVector3_8h" local="no">iDynTree/GeomVector3.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">iterator</includes>
    <includes refid="Transform_8h" local="no">iDynTree/Transform.h</includes>
    <includes refid="VectorDynSize_8h" local="no">iDynTree/VectorDynSize.h</includes>
    <includes refid="Indices_8h" local="no">iDynTree/Indices.h</includes>
    <includedby refid="AccelerometerSensor_8h" local="no">iDynTree/AccelerometerSensor.h</includedby>
    <includedby refid="GyroscopeSensor_8h" local="no">iDynTree/GyroscopeSensor.h</includedby>
    <includedby refid="Model_8h" local="no">iDynTree/Model.h</includedby>
    <includedby refid="Sensors_2Sensors_8h" local="no">iDynTree/Sensors/Sensors.h</includedby>
    <includedby refid="SixAxisForceTorqueSensor_8h" local="no">iDynTree/SixAxisForceTorqueSensor.h</includedby>
    <includedby refid="ThreeAxisAngularAccelerometerSensor_8h" local="no">iDynTree/ThreeAxisAngularAccelerometerSensor.h</includedby>
    <includedby refid="ThreeAxisForceTorqueContactSensor_8h" local="no">iDynTree/ThreeAxisForceTorqueContactSensor.h</includedby>
    <includedby refid="BerdyHelper_8h" local="no">iDynTree/BerdyHelper.h</includedby>
    <includedby refid="ExtWrenchesAndJointTorquesEstimator_8h" local="no">iDynTree/ExtWrenchesAndJointTorquesEstimator.h</includedby>
    <includedby refid="ModelCalibrationHelper_8h" local="no">iDynTree/ModelCalibrationHelper.h</includedby>
    <includedby refid="ModelExporter_8h" local="no">iDynTree/ModelExporter.h</includedby>
    <includedby refid="ModelLoader_8h" local="no">iDynTree/ModelLoader.h</includedby>
    <includedby refid="SensorElement_8h" local="no">private/SensorElement.h</includedby>
    <includedby refid="URDFDocument_8h" local="no">private/URDFDocument.h</includedby>
    <incdepgraph>
      <node id="4">
        <label>iterator</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="1">
        <label>iDynTree/Sensors.h</label>
        <link refid="Sensors_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classiDynTree_1_1Sensor" prot="public">iDynTree::Sensor</innerclass>
    <innerclass refid="classiDynTree_1_1JointSensor" prot="public">iDynTree::JointSensor</innerclass>
    <innerclass refid="classiDynTree_1_1LinkSensor" prot="public">iDynTree::LinkSensor</innerclass>
    <innerclass refid="classiDynTree_1_1SensorsList" prot="public">iDynTree::SensorsList</innerclass>
    <innerclass refid="classiDynTree_1_1SensorsList_1_1TypedIterator" prot="public">iDynTree::SensorsList::TypedIterator</innerclass>
    <innerclass refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator" prot="public">iDynTree::SensorsList::ConstTypedIterator</innerclass>
    <innerclass refid="classiDynTree_1_1SensorsList_1_1Iterator" prot="public">iDynTree::SensorsList::Iterator</innerclass>
    <innerclass refid="classiDynTree_1_1SensorsList_1_1ConstIterator" prot="public">iDynTree::SensorsList::ConstIterator</innerclass>
    <innerclass refid="classiDynTree_1_1SensorsMeasurements" prot="public">iDynTree::SensorsMeasurements</innerclass>
    <innernamespace refid="namespaceiDynTree">iDynTree</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="Sensors_8h_1ad291b88efdf5262d744d33f642daf8b9" prot="public" static="no" strong="no">
        <type></type>
        <name>SensorType</name>
        <enumvalue id="Sensors_8h_1ad291b88efdf5262d744d33f642daf8b9a7006069f3fbbdb2dfdd42a73646eb0c2" prot="public">
          <name>SIX_AXIS_FORCE_TORQUE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Sensors_8h_1ad291b88efdf5262d744d33f642daf8b9acaffc97afec9d7a74f00e940a440e27c" prot="public">
          <name>ACCELEROMETER</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Sensors_8h_1ad291b88efdf5262d744d33f642daf8b9af18877b600b6d3bb9828709115fc0f7d" prot="public">
          <name>GYROSCOPE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Sensors_8h_1ad291b88efdf5262d744d33f642daf8b9a442e40fb46ceb1796cb5d6b7d7e7e167" prot="public">
          <name>THREE_AXIS_ANGULAR_ACCELEROMETER</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Sensors_8h_1ad291b88efdf5262d744d33f642daf8b9a92de2e46732f84e720c99cd5a3588190" prot="public">
          <name>THREE_AXIS_FORCE_TORQUE_CONTACT</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="28" column="5" bodyfile="iDynTree/Sensors.h" bodystart="29" bodyend="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="Sensors_8h_1a27f6da1749325b5fabe94ceb7278f0df" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int iDynTree::NR_OF_SENSOR_TYPES</definition>
        <argsstring></argsstring>
        <name>NR_OF_SENSOR_TYPES</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="39" column="15" bodyfile="iDynTree/Sensors.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="Sensors_8h_1a784ae0ef50c758f0cf07ab414f432963" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::isLinkSensor</definition>
        <argsstring>(const SensorType type)</argsstring>
        <name>isLinkSensor</name>
        <param>
          <type>const SensorType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Short function to check if a SensorType is a <ref refid="classiDynTree_1_1LinkSensor" kindref="compound">LinkSensor</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="44" column="17" bodyfile="iDynTree/Sensors.h" bodystart="44" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="Sensors_8h_1a6edabe0d73bb9102d0ad456124c0f195" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::isJointSensor</definition>
        <argsstring>(const SensorType type)</argsstring>
        <name>isJointSensor</name>
        <param>
          <type>const SensorType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Short function to check if a SensorType is. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="62" column="17" bodyfile="iDynTree/Sensors.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="Sensors_8h_1a6b73f760e18bf9860c623ddc8a0f376c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t iDynTree::getSensorTypeSize</definition>
        <argsstring>(const SensorType type)</argsstring>
        <name>getSensorTypeSize</name>
        <param>
          <type>const SensorType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="67" column="24" bodyfile="iDynTree/Sensors.h" bodystart="67" bodyend="81"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="iDynTree/Sensors.h"/>
  </compounddef>
</doxygen>
