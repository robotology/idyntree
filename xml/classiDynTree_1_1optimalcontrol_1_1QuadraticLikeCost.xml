<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost" kind="class" language="C++" prot="public">
    <compoundname>iDynTree::optimalcontrol::QuadraticLikeCost</compoundname>
    <basecompoundref refid="classiDynTree_1_1optimalcontrol_1_1Cost" prot="public" virt="non-virtual">iDynTree::optimalcontrol::Cost</basecompoundref>
    <derivedcompoundref refid="classiDynTree_1_1optimalcontrol_1_1LinearCost" prot="public" virt="non-virtual">iDynTree::optimalcontrol::LinearCost</derivedcompoundref>
    <derivedcompoundref refid="classiDynTree_1_1optimalcontrol_1_1QuadraticCost" prot="public" virt="non-virtual">iDynTree::optimalcontrol::QuadraticCost</derivedcompoundref>
    <includes local="no">iDynTree/QuadraticLikeCost.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1abf8b22918021ba6ff7743575d30138c1" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classiDynTree_1_1optimalcontrol_1_1TimeVaryingObject" kindref="compound">iDynTree::optimalcontrol::TimeVaryingMatrix</ref> &gt;</type>
        <definition>std::shared_ptr&lt;iDynTree::optimalcontrol::TimeVaryingMatrix&gt; iDynTree::optimalcontrol::QuadraticLikeCost::m_timeVaryingStateHessian</definition>
        <argsstring></argsstring>
        <name>m_timeVaryingStateHessian</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="73" column="28" bodyfile="iDynTree/QuadraticLikeCost.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1abedf340f114e51dacd483fd73f373fe5" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classiDynTree_1_1optimalcontrol_1_1TimeVaryingObject" kindref="compound">iDynTree::optimalcontrol::TimeVaryingVector</ref> &gt;</type>
        <definition>std::shared_ptr&lt;iDynTree::optimalcontrol::TimeVaryingVector&gt; iDynTree::optimalcontrol::QuadraticLikeCost::m_timeVaryingStateGradient</definition>
        <argsstring></argsstring>
        <name>m_timeVaryingStateGradient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="74" column="28" bodyfile="iDynTree/QuadraticLikeCost.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a416877725e0df7d52ef0f599b39db143" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classiDynTree_1_1optimalcontrol_1_1TimeVaryingObject" kindref="compound">iDynTree::optimalcontrol::TimeVaryingDouble</ref> &gt;</type>
        <definition>std::shared_ptr&lt;iDynTree::optimalcontrol::TimeVaryingDouble&gt; iDynTree::optimalcontrol::QuadraticLikeCost::m_timeVaryingStateCostBias</definition>
        <argsstring></argsstring>
        <name>m_timeVaryingStateCostBias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="75" column="28" bodyfile="iDynTree/QuadraticLikeCost.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a41bc5547c17cf3b7490ea15361fc0de8" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classiDynTree_1_1optimalcontrol_1_1TimeVaryingObject" kindref="compound">iDynTree::optimalcontrol::TimeVaryingMatrix</ref> &gt;</type>
        <definition>std::shared_ptr&lt;iDynTree::optimalcontrol::TimeVaryingMatrix&gt; iDynTree::optimalcontrol::QuadraticLikeCost::m_timeVaryingControlHessian</definition>
        <argsstring></argsstring>
        <name>m_timeVaryingControlHessian</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="76" column="28" bodyfile="iDynTree/QuadraticLikeCost.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a9269110e23af528aae7b78aad054d0c9" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classiDynTree_1_1optimalcontrol_1_1TimeVaryingObject" kindref="compound">iDynTree::optimalcontrol::TimeVaryingVector</ref> &gt;</type>
        <definition>std::shared_ptr&lt;iDynTree::optimalcontrol::TimeVaryingVector&gt; iDynTree::optimalcontrol::QuadraticLikeCost::m_timeVaryingControlGradient</definition>
        <argsstring></argsstring>
        <name>m_timeVaryingControlGradient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="77" column="28" bodyfile="iDynTree/QuadraticLikeCost.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a379ea8c1910865e1ad109cc46ad8bfb6" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classiDynTree_1_1optimalcontrol_1_1TimeVaryingObject" kindref="compound">iDynTree::optimalcontrol::TimeVaryingDouble</ref> &gt;</type>
        <definition>std::shared_ptr&lt;iDynTree::optimalcontrol::TimeVaryingDouble&gt; iDynTree::optimalcontrol::QuadraticLikeCost::m_timeVaryingControlCostBias</definition>
        <argsstring></argsstring>
        <name>m_timeVaryingControlCostBias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="78" column="28" bodyfile="iDynTree/QuadraticLikeCost.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1ae9c9fd426f107159f3e5354fd3f0562e" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool iDynTree::optimalcontrol::QuadraticLikeCost::m_hasSecondPartialDerivativeWRTStateSparsity</definition>
        <argsstring></argsstring>
        <name>m_hasSecondPartialDerivativeWRTStateSparsity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="80" column="17" bodyfile="iDynTree/QuadraticLikeCost.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1aeb28846afd2fe3f4373b646d49fbba97" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool iDynTree::optimalcontrol::QuadraticLikeCost::m_hasSecondPartialDerivativeWRTControlSparsity</definition>
        <argsstring></argsstring>
        <name>m_hasSecondPartialDerivativeWRTControlSparsity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="81" column="17" bodyfile="iDynTree/QuadraticLikeCost.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1ae00c9061c568494f23b858ad05a0ff02" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool iDynTree::optimalcontrol::QuadraticLikeCost::m_hasSecondPartialDerivativeWRTStateControlSparsity</definition>
        <argsstring></argsstring>
        <name>m_hasSecondPartialDerivativeWRTStateControlSparsity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="82" column="17" bodyfile="iDynTree/QuadraticLikeCost.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a917cfae65e537e496290046a44d7ca94" prot="protected" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1optimalcontrol_1_1SparsityStructure" kindref="compound">SparsityStructure</ref></type>
        <definition>SparsityStructure iDynTree::optimalcontrol::QuadraticLikeCost::m_secondPartialDerivativeWRTStateSparsity</definition>
        <argsstring></argsstring>
        <name>m_secondPartialDerivativeWRTStateSparsity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="84" column="30" bodyfile="iDynTree/QuadraticLikeCost.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a55d298ac7b70590ad7e9122a21c03b7d" prot="protected" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1optimalcontrol_1_1SparsityStructure" kindref="compound">SparsityStructure</ref></type>
        <definition>SparsityStructure iDynTree::optimalcontrol::QuadraticLikeCost::m_secondPartialDerivativeWRTControlSparsity</definition>
        <argsstring></argsstring>
        <name>m_secondPartialDerivativeWRTControlSparsity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="85" column="30" bodyfile="iDynTree/QuadraticLikeCost.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1aa329727f0449dd78cc65248c5ee2f7ec" prot="protected" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1optimalcontrol_1_1SparsityStructure" kindref="compound">SparsityStructure</ref></type>
        <definition>SparsityStructure iDynTree::optimalcontrol::QuadraticLikeCost::m_secondPartialDerivativeWRTStateControlSparsity</definition>
        <argsstring></argsstring>
        <name>m_secondPartialDerivativeWRTStateControlSparsity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="86" column="30" bodyfile="iDynTree/QuadraticLikeCost.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1aa0d70085d73533997d1827f954a5a0fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual iDynTree::optimalcontrol::QuadraticLikeCost::~QuadraticLikeCost</definition>
        <argsstring>() override</argsstring>
        <name>~QuadraticLikeCost</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="31" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1afa7aa964e0221db0c39d9eec020b1bb0" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool iDynTree::optimalcontrol::QuadraticLikeCost::costEvaluation</definition>
        <argsstring>(double time, const iDynTree::VectorDynSize &amp;state, const iDynTree::VectorDynSize &amp;control, double &amp;costValue) final</argsstring>
        <name>costEvaluation</name>
        <reimplements refid="classiDynTree_1_1optimalcontrol_1_1Cost_1a1bb0880783d8f4ed6baff2b922a571f0">costEvaluation</reimplements>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorDynSize" kindref="compound">iDynTree::VectorDynSize</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorDynSize" kindref="compound">iDynTree::VectorDynSize</ref> &amp;</type>
          <declname>control</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>costValue</declname>
        </param>
        <briefdescription>
<para>Evaluate the cost function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time at which the cost is evaluated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>The state value with which the cost has to be evaluated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">control</parametername>
</parameternamelist>
<parameterdescription>
<para>The control value with which the cost has to be evaluated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">costValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The cost value given the above inputs. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successfull, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="33" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a4475397f2ecdcdf597460c050b32c62d" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool iDynTree::optimalcontrol::QuadraticLikeCost::costFirstPartialDerivativeWRTState</definition>
        <argsstring>(double time, const iDynTree::VectorDynSize &amp;state, const iDynTree::VectorDynSize &amp;control, iDynTree::VectorDynSize &amp;partialDerivative) final</argsstring>
        <name>costFirstPartialDerivativeWRTState</name>
        <reimplements refid="classiDynTree_1_1optimalcontrol_1_1Cost_1a632e5dfae0ce8c117ea636daf417c5bd">costFirstPartialDerivativeWRTState</reimplements>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorDynSize" kindref="compound">iDynTree::VectorDynSize</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorDynSize" kindref="compound">iDynTree::VectorDynSize</ref> &amp;</type>
          <declname>control</declname>
        </param>
        <param>
          <type><ref refid="classiDynTree_1_1VectorDynSize" kindref="compound">iDynTree::VectorDynSize</ref> &amp;</type>
          <declname>partialDerivative</declname>
        </param>
        <briefdescription>
<para>Evaluate cost first partial derivative wrt the state. </para>
        </briefdescription>
        <detaileddescription>
<para>It is the result of <formula id="326">$\frac{\partial g(t, x, u)}{\partial x}$</formula> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time at which the partial derivative is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>The state value at which the partial derivative is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">control</parametername>
</parameternamelist>
<parameterdescription>
<para>The control value at which the partial derivative is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">partialDerivative</parametername>
</parameternamelist>
<parameterdescription>
<para>The output partial derivative. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successfull, false otherwise (or if not implemented). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="38" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1abc543d1905aa851fbfcc296b6dc5d276" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool iDynTree::optimalcontrol::QuadraticLikeCost::costFirstPartialDerivativeWRTControl</definition>
        <argsstring>(double time, const iDynTree::VectorDynSize &amp;state, const iDynTree::VectorDynSize &amp;control, iDynTree::VectorDynSize &amp;partialDerivative) final</argsstring>
        <name>costFirstPartialDerivativeWRTControl</name>
        <reimplements refid="classiDynTree_1_1optimalcontrol_1_1Cost_1acce9d7b5bb53e71d0c2e55340636d531">costFirstPartialDerivativeWRTControl</reimplements>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorDynSize" kindref="compound">iDynTree::VectorDynSize</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorDynSize" kindref="compound">iDynTree::VectorDynSize</ref> &amp;</type>
          <declname>control</declname>
        </param>
        <param>
          <type><ref refid="classiDynTree_1_1VectorDynSize" kindref="compound">iDynTree::VectorDynSize</ref> &amp;</type>
          <declname>partialDerivative</declname>
        </param>
        <briefdescription>
<para>Evaluate cost first partial derivative wrt the control variables. </para>
        </briefdescription>
        <detaileddescription>
<para>It is the result of <formula id="327">$\frac{\partial g(t, x, u)}{\partial u}$</formula> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time at which the partial derivative is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>The state value at which the partial derivative is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">control</parametername>
</parameternamelist>
<parameterdescription>
<para>The control value at which the partial derivative is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">partialDerivative</parametername>
</parameternamelist>
<parameterdescription>
<para>The output partial derivative. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successfull, false otherwise (or if not implemented). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="43" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1ae8820c08b123bdb321c36fecff42d10d" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool iDynTree::optimalcontrol::QuadraticLikeCost::costSecondPartialDerivativeWRTState</definition>
        <argsstring>(double time, const iDynTree::VectorDynSize &amp;state, const iDynTree::VectorDynSize &amp;control, iDynTree::MatrixDynSize &amp;partialDerivative) final</argsstring>
        <name>costSecondPartialDerivativeWRTState</name>
        <reimplements refid="classiDynTree_1_1optimalcontrol_1_1Cost_1a79f931220587a1922770067c0833f0a9">costSecondPartialDerivativeWRTState</reimplements>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorDynSize" kindref="compound">iDynTree::VectorDynSize</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorDynSize" kindref="compound">iDynTree::VectorDynSize</ref> &amp;</type>
          <declname>control</declname>
        </param>
        <param>
          <type><ref refid="classiDynTree_1_1MatrixDynSize" kindref="compound">iDynTree::MatrixDynSize</ref> &amp;</type>
          <declname>partialDerivative</declname>
        </param>
        <briefdescription>
<para>Evaluate cost second partial derivative wrt the state variables. </para>
        </briefdescription>
        <detaileddescription>
<para>It is the result of <formula id="328">$\frac{\partial^2 g(t, x, u)}{\partial x^2}$</formula> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time at which the partial derivative is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>The state value at which the partial derivative is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">control</parametername>
</parameternamelist>
<parameterdescription>
<para>The control value at which the partial derivative is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">partialDerivative</parametername>
</parameternamelist>
<parameterdescription>
<para>The output partial derivative. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successfull, false otherwise (or if not implemented). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="48" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1aa30638553d8ff59f9d7e81d096df1fc5" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool iDynTree::optimalcontrol::QuadraticLikeCost::costSecondPartialDerivativeWRTControl</definition>
        <argsstring>(double time, const iDynTree::VectorDynSize &amp;state, const iDynTree::VectorDynSize &amp;control, iDynTree::MatrixDynSize &amp;partialDerivative) final</argsstring>
        <name>costSecondPartialDerivativeWRTControl</name>
        <reimplements refid="classiDynTree_1_1optimalcontrol_1_1Cost_1a9870c1daad9a147705e3d44be7357a2e">costSecondPartialDerivativeWRTControl</reimplements>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorDynSize" kindref="compound">iDynTree::VectorDynSize</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorDynSize" kindref="compound">iDynTree::VectorDynSize</ref> &amp;</type>
          <declname>control</declname>
        </param>
        <param>
          <type><ref refid="classiDynTree_1_1MatrixDynSize" kindref="compound">iDynTree::MatrixDynSize</ref> &amp;</type>
          <declname>partialDerivative</declname>
        </param>
        <briefdescription>
<para>Evaluate cost second partial derivative wrt the control. </para>
        </briefdescription>
        <detaileddescription>
<para>It is the result of <formula id="329">$\frac{\partial^2 g(t, x, u)}{\partial u^2}$</formula> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time at which the partial derivative is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>The state value at which the partial derivative is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">control</parametername>
</parameternamelist>
<parameterdescription>
<para>The control value at which the partial derivative is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">partialDerivative</parametername>
</parameternamelist>
<parameterdescription>
<para>The output partial derivative. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successfull, false otherwise (or if not implemented). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="53" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1ac2a8f6f8f602edb75ba99fc497f72a07" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool iDynTree::optimalcontrol::QuadraticLikeCost::costSecondPartialDerivativeWRTStateControl</definition>
        <argsstring>(double time, const iDynTree::VectorDynSize &amp;state, const iDynTree::VectorDynSize &amp;control, iDynTree::MatrixDynSize &amp;partialDerivative) final</argsstring>
        <name>costSecondPartialDerivativeWRTStateControl</name>
        <reimplements refid="classiDynTree_1_1optimalcontrol_1_1Cost_1abb75feccd10750af47e792723e187c82">costSecondPartialDerivativeWRTStateControl</reimplements>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorDynSize" kindref="compound">iDynTree::VectorDynSize</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorDynSize" kindref="compound">iDynTree::VectorDynSize</ref> &amp;</type>
          <declname>control</declname>
        </param>
        <param>
          <type><ref refid="classiDynTree_1_1MatrixDynSize" kindref="compound">iDynTree::MatrixDynSize</ref> &amp;</type>
          <declname>partialDerivative</declname>
        </param>
        <briefdescription>
<para>Evaluate cost second partial derivative wrt the state and control. </para>
        </briefdescription>
        <detaileddescription>
<para>It is the result of <formula id="330">$\frac{\partial^2 g(t, x, u)}{\partial x \partial u}$</formula>, thus it has number of rows equals to the number of states and number of cols equal to the number of control inputs. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time at which the partial derivative is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>The state value at which the partial derivative is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">control</parametername>
</parameternamelist>
<parameterdescription>
<para>The control value at which the partial derivative is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">partialDerivative</parametername>
</parameternamelist>
<parameterdescription>
<para>The output partial derivative. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successfull, false otherwise (or if not implemented). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="59" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1af0cf7c4bb09a7f22b1924c8bed72ed34" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool iDynTree::optimalcontrol::QuadraticLikeCost::costSecondPartialDerivativeWRTStateSparsity</definition>
        <argsstring>(iDynTree::optimalcontrol::SparsityStructure &amp;stateSparsity) final</argsstring>
        <name>costSecondPartialDerivativeWRTStateSparsity</name>
        <reimplements refid="classiDynTree_1_1optimalcontrol_1_1Cost_1a4b1d17aa266ad7bcdc421a71aa141d46">costSecondPartialDerivativeWRTStateSparsity</reimplements>
        <param>
          <type><ref refid="classiDynTree_1_1optimalcontrol_1_1SparsityStructure" kindref="compound">iDynTree::optimalcontrol::SparsityStructure</ref> &amp;</type>
          <declname>stateSparsity</declname>
        </param>
        <briefdescription>
<para>Returns the set of nonzeros elements in terms of row and colun index, in the state hessian. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>No check is performed in the indeces. They need to be in the range [0, stateDimension) and [0, stateDimension) respectively. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">stateSparsity</parametername>
</parameternamelist>
<parameterdescription>
<para>Sparsity structure of the partial derivative of the gradient wrt state variables. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the sparsity is available. False otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="64" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a5c23504c3a9f8fabe3431a654073bbc2" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool iDynTree::optimalcontrol::QuadraticLikeCost::costSecondPartialDerivativeWRTStateControlSparsity</definition>
        <argsstring>(iDynTree::optimalcontrol::SparsityStructure &amp;stateControlSparsity) final</argsstring>
        <name>costSecondPartialDerivativeWRTStateControlSparsity</name>
        <reimplements refid="classiDynTree_1_1optimalcontrol_1_1Cost_1ad4a1b35416b75e61b2491152a784f175">costSecondPartialDerivativeWRTStateControlSparsity</reimplements>
        <param>
          <type><ref refid="classiDynTree_1_1optimalcontrol_1_1SparsityStructure" kindref="compound">iDynTree::optimalcontrol::SparsityStructure</ref> &amp;</type>
          <declname>stateControlSparsity</declname>
        </param>
        <briefdescription>
<para>Returns the set of nonzeros elements in terms of row and colun index, in the mixed hessian. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>No check is performed in the indeces. They need to be in the range [0, stateDimension) and [0, controlDimension) respectively. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">stateControlSparsity</parametername>
</parameternamelist>
<parameterdescription>
<para>Sparsity structure of the partial derivative of the gradient wrt state and control variables. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the sparsity is available. False otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="66" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1ae76e9ba84440737d2a7a7c96266fd847" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool iDynTree::optimalcontrol::QuadraticLikeCost::costSecondPartialDerivativeWRTControlSparsity</definition>
        <argsstring>(iDynTree::optimalcontrol::SparsityStructure &amp;controlSparsity) final</argsstring>
        <name>costSecondPartialDerivativeWRTControlSparsity</name>
        <reimplements refid="classiDynTree_1_1optimalcontrol_1_1Cost_1a983297b5309a3d379935733dcb8a5ddf">costSecondPartialDerivativeWRTControlSparsity</reimplements>
        <param>
          <type><ref refid="classiDynTree_1_1optimalcontrol_1_1SparsityStructure" kindref="compound">iDynTree::optimalcontrol::SparsityStructure</ref> &amp;</type>
          <declname>controlSparsity</declname>
        </param>
        <briefdescription>
<para>Returns the set of nonzeros elements in terms of row and colun index, in the control hessian. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>No check is performed in the indeces. They need to be in the range [0, constraintDimension) and [0, controlDimension) respectively. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">controlSparsity</parametername>
</parameternamelist>
<parameterdescription>
<para>Sparsity structure of the partial derivative of the gradient wrt control variables. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the sparsity is available. False otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="68" column="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a882f483ef58fd779148f92dba7f81ba6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iDynTree::optimalcontrol::QuadraticLikeCost::QuadraticLikeCost</definition>
        <argsstring>(const std::string &amp;costName)</argsstring>
        <name>QuadraticLikeCost</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>costName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/QuadraticLikeCost.h" line="71" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="warning"><para>This class is still in active development, and so API interface can change between iDynTree versions. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>iDynTree::optimalcontrol::LinearCost</label>
        <link refid="classiDynTree_1_1optimalcontrol_1_1LinearCost"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>iDynTree::optimalcontrol::QuadraticLikeCost</label>
        <link refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>iDynTree::optimalcontrol::QuadraticCost</label>
        <link refid="classiDynTree_1_1optimalcontrol_1_1QuadraticCost"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>iDynTree::optimalcontrol::Cost</label>
        <link refid="classiDynTree_1_1optimalcontrol_1_1Cost"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>T</label>
      </node>
      <node id="4">
        <label>std::shared_ptr&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>iDynTree::optimalcontrol::SparsityStructure</label>
        <link refid="classiDynTree_1_1optimalcontrol_1_1SparsityStructure"/>
      </node>
      <node id="1">
        <label>iDynTree::optimalcontrol::QuadraticLikeCost</label>
        <link refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_timeVaryingControlCostBias</edgelabel>
          <edgelabel>m_timeVaryingControlGradient</edgelabel>
          <edgelabel>m_timeVaryingControlHessian</edgelabel>
          <edgelabel>m_timeVaryingStateCostBias</edgelabel>
          <edgelabel>m_timeVaryingStateGradient</edgelabel>
          <edgelabel>m_timeVaryingStateHessian</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_secondPartialDerivativeWRTControlSparsity</edgelabel>
          <edgelabel>m_secondPartialDerivativeWRTStateControlSparsity</edgelabel>
          <edgelabel>m_secondPartialDerivativeWRTStateSparsity</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::shared_ptr&lt; iDynTree::optimalcontrol::TimeVaryingObject &gt;</label>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; iDynTree::optimalcontrol::TimeVaryingObject &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>iDynTree::optimalcontrol::Cost</label>
        <link refid="classiDynTree_1_1optimalcontrol_1_1Cost"/>
      </node>
    </collaborationgraph>
    <location file="iDynTree/QuadraticLikeCost.h" line="26" column="8" bodyfile="iDynTree/QuadraticLikeCost.h" bodystart="27" bodyend="88"/>
    <listofallmembers>
      <member refid="classiDynTree_1_1optimalcontrol_1_1Cost_1a97ea5427f72a47d5abd6b37ca71a51f5" prot="public" virt="non-virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>Cost</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1afa7aa964e0221db0c39d9eec020b1bb0" prot="public" virt="virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>costEvaluation</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1abc543d1905aa851fbfcc296b6dc5d276" prot="public" virt="virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>costFirstPartialDerivativeWRTControl</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a4475397f2ecdcdf597460c050b32c62d" prot="public" virt="virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>costFirstPartialDerivativeWRTState</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1aa30638553d8ff59f9d7e81d096df1fc5" prot="public" virt="virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>costSecondPartialDerivativeWRTControl</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1ae76e9ba84440737d2a7a7c96266fd847" prot="public" virt="virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>costSecondPartialDerivativeWRTControlSparsity</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1ae8820c08b123bdb321c36fecff42d10d" prot="public" virt="virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>costSecondPartialDerivativeWRTState</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1ac2a8f6f8f602edb75ba99fc497f72a07" prot="public" virt="virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>costSecondPartialDerivativeWRTStateControl</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a5c23504c3a9f8fabe3431a654073bbc2" prot="public" virt="virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>costSecondPartialDerivativeWRTStateControlSparsity</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1af0cf7c4bb09a7f22b1924c8bed72ed34" prot="public" virt="virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>costSecondPartialDerivativeWRTStateSparsity</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1aeb28846afd2fe3f4373b646d49fbba97" prot="protected" virt="non-virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>m_hasSecondPartialDerivativeWRTControlSparsity</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1ae00c9061c568494f23b858ad05a0ff02" prot="protected" virt="non-virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>m_hasSecondPartialDerivativeWRTStateControlSparsity</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1ae9c9fd426f107159f3e5354fd3f0562e" prot="protected" virt="non-virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>m_hasSecondPartialDerivativeWRTStateSparsity</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a55d298ac7b70590ad7e9122a21c03b7d" prot="protected" virt="non-virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>m_secondPartialDerivativeWRTControlSparsity</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1aa329727f0449dd78cc65248c5ee2f7ec" prot="protected" virt="non-virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>m_secondPartialDerivativeWRTStateControlSparsity</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a917cfae65e537e496290046a44d7ca94" prot="protected" virt="non-virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>m_secondPartialDerivativeWRTStateSparsity</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a379ea8c1910865e1ad109cc46ad8bfb6" prot="protected" virt="non-virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>m_timeVaryingControlCostBias</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a9269110e23af528aae7b78aad054d0c9" prot="protected" virt="non-virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>m_timeVaryingControlGradient</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a41bc5547c17cf3b7490ea15361fc0de8" prot="protected" virt="non-virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>m_timeVaryingControlHessian</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a416877725e0df7d52ef0f599b39db143" prot="protected" virt="non-virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>m_timeVaryingStateCostBias</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1abedf340f114e51dacd483fd73f373fe5" prot="protected" virt="non-virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>m_timeVaryingStateGradient</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1abf8b22918021ba6ff7743575d30138c1" prot="protected" virt="non-virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>m_timeVaryingStateHessian</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1Cost_1aaaea0b41a2a114e1efcd42e58e9bbb78" prot="public" virt="non-virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>name</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1a882f483ef58fd779148f92dba7f81ba6" prot="protected" virt="non-virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>QuadraticLikeCost</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1Cost_1aa956dac8cebf92d37d7682b5be30ed32" prot="public" virt="virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>~Cost</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1QuadraticLikeCost_1aa0d70085d73533997d1827f954a5a0fc" prot="public" virt="virtual"><scope>iDynTree::optimalcontrol::QuadraticLikeCost</scope><name>~QuadraticLikeCost</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
